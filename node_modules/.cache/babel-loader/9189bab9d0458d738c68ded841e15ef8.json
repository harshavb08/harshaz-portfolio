{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\n\nvar EmittersPlugin = /*#__PURE__*/function () {\n  function EmittersPlugin(engine) {\n    _classCallCheck(this, EmittersPlugin);\n\n    this._engine = engine;\n    this.id = \"emitters\";\n  }\n\n  _createClass(EmittersPlugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new Emitters(this._engine, container);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      var _a, _b, _c, _d, _e, _f;\n\n      if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n        return;\n      }\n\n      if (source === null || source === void 0 ? void 0 : source.emitters) {\n        options.emitters = executeOnSingleOrMultiple(source.emitters, function (emitter) {\n          var tmp = new Emitter();\n          tmp.load(emitter);\n          return tmp;\n        });\n      }\n\n      var interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          options.interactivity.modes.emitters = {\n            random: {\n              count: 1,\n              enable: true\n            },\n            value: interactivityEmitters.map(function (s) {\n              var tmp = new Emitter();\n              tmp.load(s);\n              return tmp;\n            })\n          };\n        } else {\n          var emitterMode = interactivityEmitters;\n\n          if (emitterMode.value !== undefined) {\n            if (emitterMode.value instanceof Array) {\n              options.interactivity.modes.emitters = {\n                random: {\n                  count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                  enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false\n                },\n                value: emitterMode.value.map(function (s) {\n                  var tmp = new Emitter();\n                  tmp.load(s);\n                  return tmp;\n                })\n              };\n            } else {\n              var tmp = new Emitter();\n              tmp.load(emitterMode.value);\n              options.interactivity.modes.emitters = {\n                random: {\n                  count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                  enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false\n                },\n                value: tmp\n              };\n            }\n          } else {\n            var emitterOptions = options.interactivity.modes.emitters = {\n              random: {\n                count: 1,\n                enable: false\n              },\n              value: new Emitter()\n            };\n            emitterOptions.value.load(interactivityEmitters);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _a, _b, _c;\n\n      if (!options) {\n        return false;\n      }\n\n      var emitters = options.emitters;\n      return emitters instanceof Array && !!emitters.length || emitters !== undefined || !!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"emitter\", options.interactivity.events.onClick.mode);\n    }\n  }]);\n\n  return EmittersPlugin;\n}();\n\nexport function loadEmittersPlugin(_x) {\n  return _loadEmittersPlugin.apply(this, arguments);\n}\n\nfunction _loadEmittersPlugin() {\n  _loadEmittersPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var plugin;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!engine.emitterShapeManager) {\n              engine.emitterShapeManager = new ShapeManager(engine);\n            }\n\n            if (!engine.addEmitterShape) {\n              engine.addEmitterShape = function (name, shape) {\n                var _a;\n\n                (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n              };\n            }\n\n            plugin = new EmittersPlugin(engine);\n            _context.next = 5;\n            return engine.addPlugin(plugin);\n\n          case 5:\n            engine.addEmitterShape(\"circle\", new CircleShape());\n            engine.addEmitterShape(\"square\", new SquareShape());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadEmittersPlugin.apply(this, arguments);\n}\n\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";","map":{"version":3,"names":["executeOnSingleOrMultiple","isInArray","CircleShape","Emitter","Emitters","ShapeManager","SquareShape","EmittersPlugin","engine","_engine","id","container","options","source","_a","_b","_c","_d","_e","_f","needsPlugin","emitters","emitter","tmp","load","interactivityEmitters","interactivity","modes","Array","random","count","enable","value","map","s","emitterMode","undefined","emitterOptions","length","events","onClick","mode","loadEmittersPlugin","emitterShapeManager","addEmitterShape","name","shape","addShape","plugin","addPlugin"],"sources":["D:/Projects/my-Portfolio/node_modules/tsparticles-plugin-emitters/esm/index.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n"],"mappings":";;;;AAAA,SAASA,yBAAT,EAAoCC,SAApC,QAAqD,oBAArD;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;IACMC,c;EACF,wBAAYC,MAAZ,EAAoB;IAAA;;IAChB,KAAKC,OAAL,GAAeD,MAAf;IACA,KAAKE,EAAL,GAAU,UAAV;EACH;;;;WACD,mBAAUC,SAAV,EAAqB;MACjB,OAAO,IAAIP,QAAJ,CAAa,KAAKK,OAAlB,EAA2BE,SAA3B,CAAP;IACH;;;WACD,qBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;MACzB,IAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB;;MACA,IAAI,CAAC,KAAKC,WAAL,CAAiBR,OAAjB,CAAD,IAA8B,CAAC,KAAKQ,WAAL,CAAiBP,MAAjB,CAAnC,EAA6D;QACzD;MACH;;MACD,IAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACQ,QAA3D,EAAqE;QACjET,OAAO,CAACS,QAAR,GAAmBrB,yBAAyB,CAACa,MAAM,CAACQ,QAAR,EAAkB,UAACC,OAAD,EAAa;UACvE,IAAMC,GAAG,GAAG,IAAIpB,OAAJ,EAAZ;UACAoB,GAAG,CAACC,IAAJ,CAASF,OAAT;UACA,OAAOC,GAAP;QACH,CAJ2C,CAA5C;MAKH;;MACD,IAAME,qBAAqB,GAAG,CAACV,EAAE,GAAG,CAACD,EAAE,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACa,aAA7D,MAAgF,IAAhF,IAAwFZ,EAAE,KAAK,KAAK,CAApG,GAAwG,KAAK,CAA7G,GAAiHA,EAAE,CAACa,KAA1H,MAAqI,IAArI,IAA6IZ,EAAE,KAAK,KAAK,CAAzJ,GAA6J,KAAK,CAAlK,GAAsKA,EAAE,CAACM,QAAvM;;MACA,IAAII,qBAAJ,EAA2B;QACvB,IAAIA,qBAAqB,YAAYG,KAArC,EAA4C;UACxChB,OAAO,CAACc,aAAR,CAAsBC,KAAtB,CAA4BN,QAA5B,GAAuC;YACnCQ,MAAM,EAAE;cACJC,KAAK,EAAE,CADH;cAEJC,MAAM,EAAE;YAFJ,CAD2B;YAKnCC,KAAK,EAAEP,qBAAqB,CAACQ,GAAtB,CAA0B,UAACC,CAAD,EAAO;cACpC,IAAMX,GAAG,GAAG,IAAIpB,OAAJ,EAAZ;cACAoB,GAAG,CAACC,IAAJ,CAASU,CAAT;cACA,OAAOX,GAAP;YACH,CAJM;UAL4B,CAAvC;QAWH,CAZD,MAaK;UACD,IAAMY,WAAW,GAAGV,qBAApB;;UACA,IAAIU,WAAW,CAACH,KAAZ,KAAsBI,SAA1B,EAAqC;YACjC,IAAID,WAAW,CAACH,KAAZ,YAA6BJ,KAAjC,EAAwC;cACpChB,OAAO,CAACc,aAAR,CAAsBC,KAAtB,CAA4BN,QAA5B,GAAuC;gBACnCQ,MAAM,EAAE;kBACJC,KAAK,EAAE,CAACd,EAAE,GAAGmB,WAAW,CAACN,MAAZ,CAAmBC,KAAzB,MAAoC,IAApC,IAA4Cd,EAAE,KAAK,KAAK,CAAxD,GAA4DA,EAA5D,GAAiE,CADpE;kBAEJe,MAAM,EAAE,CAACd,EAAE,GAAGkB,WAAW,CAACN,MAAZ,CAAmBE,MAAzB,MAAqC,IAArC,IAA6Cd,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE;gBAFtE,CAD2B;gBAKnCe,KAAK,EAAEG,WAAW,CAACH,KAAZ,CAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAO;kBAChC,IAAMX,GAAG,GAAG,IAAIpB,OAAJ,EAAZ;kBACAoB,GAAG,CAACC,IAAJ,CAASU,CAAT;kBACA,OAAOX,GAAP;gBACH,CAJM;cAL4B,CAAvC;YAWH,CAZD,MAaK;cACD,IAAMA,GAAG,GAAG,IAAIpB,OAAJ,EAAZ;cACAoB,GAAG,CAACC,IAAJ,CAASW,WAAW,CAACH,KAArB;cACApB,OAAO,CAACc,aAAR,CAAsBC,KAAtB,CAA4BN,QAA5B,GAAuC;gBACnCQ,MAAM,EAAE;kBACJC,KAAK,EAAE,CAACZ,EAAE,GAAGiB,WAAW,CAACN,MAAZ,CAAmBC,KAAzB,MAAoC,IAApC,IAA4CZ,EAAE,KAAK,KAAK,CAAxD,GAA4DA,EAA5D,GAAiE,CADpE;kBAEJa,MAAM,EAAE,CAACZ,EAAE,GAAGgB,WAAW,CAACN,MAAZ,CAAmBE,MAAzB,MAAqC,IAArC,IAA6CZ,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE;gBAFtE,CAD2B;gBAKnCa,KAAK,EAAET;cAL4B,CAAvC;YAOH;UACJ,CAzBD,MA0BK;YACD,IAAMc,cAAc,GAAIzB,OAAO,CAACc,aAAR,CAAsBC,KAAtB,CAA4BN,QAA5B,GAAuC;cAC3DQ,MAAM,EAAE;gBACJC,KAAK,EAAE,CADH;gBAEJC,MAAM,EAAE;cAFJ,CADmD;cAK3DC,KAAK,EAAE,IAAI7B,OAAJ;YALoD,CAA/D;YAOAkC,cAAc,CAACL,KAAf,CAAqBR,IAArB,CAA0BC,qBAA1B;UACH;QACJ;MACJ;IACJ;;;WACD,qBAAYb,OAAZ,EAAqB;MACjB,IAAIE,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;MACA,IAAI,CAACJ,OAAL,EAAc;QACV,OAAO,KAAP;MACH;;MACD,IAAMS,QAAQ,GAAGT,OAAO,CAACS,QAAzB;MACA,OAASA,QAAQ,YAAYO,KAApB,IAA6B,CAAC,CAACP,QAAQ,CAACiB,MAAzC,IACJjB,QAAQ,KAAKe,SADT,IAEH,CAAC,EAAE,CAACpB,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGF,OAAO,CAACc,aAAd,MAAiC,IAAjC,IAAyCZ,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACyB,MAA3E,MAAuF,IAAvF,IAA+FxB,EAAE,KAAK,KAAK,CAA3G,GAA+G,KAAK,CAApH,GAAwHA,EAAE,CAACyB,OAAjI,MAA8I,IAA9I,IAAsJxB,EAAE,KAAK,KAAK,CAAlK,GAAsK,KAAK,CAA3K,GAA+KA,EAAE,CAACyB,IAApL,CAAD,IACGxC,SAAS,CAAC,SAAD,EAAYW,OAAO,CAACc,aAAR,CAAsBa,MAAtB,CAA6BC,OAA7B,CAAqCC,IAAjD,CAHjB;IAIH;;;;;;AAEL,gBAAsBC,kBAAtB;EAAA;AAAA;;;mFAAO,iBAAkClC,MAAlC;IAAA;IAAA;MAAA;QAAA;UAAA;YACH,IAAI,CAACA,MAAM,CAACmC,mBAAZ,EAAiC;cAC7BnC,MAAM,CAACmC,mBAAP,GAA6B,IAAItC,YAAJ,CAAiBG,MAAjB,CAA7B;YACH;;YACD,IAAI,CAACA,MAAM,CAACoC,eAAZ,EAA6B;cACzBpC,MAAM,CAACoC,eAAP,GAAyB,UAACC,IAAD,EAAOC,KAAP,EAAiB;gBACtC,IAAIhC,EAAJ;;gBACA,CAACA,EAAE,GAAGN,MAAM,CAACmC,mBAAb,MAAsC,IAAtC,IAA8C7B,EAAE,KAAK,KAAK,CAA1D,GAA8D,KAAK,CAAnE,GAAuEA,EAAE,CAACiC,QAAH,CAAYF,IAAZ,EAAkBC,KAAlB,CAAvE;cACH,CAHD;YAIH;;YACKE,MAVH,GAUY,IAAIzC,cAAJ,CAAmBC,MAAnB,CAVZ;YAAA;YAAA,OAWGA,MAAM,CAACyC,SAAP,CAAiBD,MAAjB,CAXH;;UAAA;YAYHxC,MAAM,CAACoC,eAAP,CAAuB,QAAvB,EAAiC,IAAI1C,WAAJ,EAAjC;YACAM,MAAM,CAACoC,eAAP,CAAuB,QAAvB,EAAiC,IAAItC,WAAJ,EAAjC;;UAbG;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAeP,cAAc,oBAAd;AACA,cAAc,kBAAd;AACA,cAAc,0BAAd;AACA,cAAc,0BAAd"},"metadata":{},"sourceType":"module"}