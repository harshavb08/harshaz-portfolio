{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n\n  var _super = _createSuper(Collider);\n\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Collider, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1, delta) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, radius2, dist, distP;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 17;\n                  break;\n                }\n\n                p2 = _step.value;\n\n                if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 15);\n\n              case 8:\n                pos2 = p2.getPosition(), radius2 = p2.getRadius();\n\n                if (!(Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 15);\n\n              case 11:\n                dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n\n                if (!(dist > distP)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 15);\n\n              case 14:\n                resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n\n              case 15:\n                _context.next = 4;\n                break;\n\n              case 17:\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](2);\n\n                _iterator.e(_context.t0);\n\n              case 22:\n                _context.prev = 22;\n\n                _iterator.f();\n\n                return _context.finish(22);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 19, 22, 25]]);\n      }));\n\n      function interact(_x, _x2) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["ParticlesInteractorBase","getDistance","resolveCollision","Collider","container","p1","delta","pos1","getPosition","radius1","getRadius","query","particles","quadTree","queryCircle","p2","options","collisions","enable","mode","destroyed","spawning","pos2","radius2","Math","abs","round","z","dist","distP","retina","pixelRatio","particle"],"sources":["D:/Projects/my-Portfolio/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,uBAAT,EAAkCC,WAAlC,QAAqD,oBAArD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,WAAaC,QAAb;EAAA;;EAAA;;EACI,kBAAYC,SAAZ,EAAuB;IAAA;;IAAA,yBACbA,SADa;EAEtB;;EAHL;IAAA;IAAA,OAII,iBAAQ,CACP;EALL;IAAA;IAAA,OAMI,gBAAO,CACN;EAPL;IAAA;IAAA;MAAA,2EAQI,iBAAeC,EAAf,EAAmBC,KAAnB;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACUF,SADV,GACsB,KAAKA,SAD3B,EACsCG,IADtC,GAC6CF,EAAE,CAACG,WAAH,EAD7C,EAC+DC,OAD/D,GACyEJ,EAAE,CAACK,SAAH,EADzE,EACyFC,KADzF,GACiGP,SAAS,CAACQ,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+CE,OAAO,GAAG,CAAzD,CADjG;gBAAA,uCAEqBE,KAFrB;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAEeI,EAFf;;gBAAA,MAGYV,EAAE,KAAKU,EAAP,IACA,CAACA,EAAE,CAACC,OAAH,CAAWC,UAAX,CAAsBC,MADvB,IAEAb,EAAE,CAACW,OAAH,CAAWC,UAAX,CAAsBE,IAAtB,KAA+BJ,EAAE,CAACC,OAAH,CAAWC,UAAX,CAAsBE,IAFrD,IAGAJ,EAAE,CAACK,SAHH,IAIAL,EAAE,CAACM,QAPf;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAUcC,IAVd,GAUqBP,EAAE,CAACP,WAAH,EAVrB,EAUuCe,OAVvC,GAUiDR,EAAE,CAACL,SAAH,EAVjD;;gBAAA,MAWYc,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWnB,IAAI,CAACoB,CAAhB,IAAqBH,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACK,CAAhB,CAA9B,IAAoDlB,OAAO,GAAGc,OAX1E;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAccK,IAdd,GAcqB3B,WAAW,CAACM,IAAD,EAAOe,IAAP,CAdhC,EAc8CO,KAd9C,GAcsDpB,OAAO,GAAGc,OAdhE;;gBAAA,MAeYK,IAAI,GAAGC,KAfnB;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAkBQ3B,gBAAgB,CAACG,EAAD,EAAKU,EAAL,EAAST,KAAT,EAAgBF,SAAS,CAAC0B,MAAV,CAAiBC,UAAjC,CAAhB;;cAlBR;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CARJ;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OA6BI,mBAAUC,QAAV,EAAoB;MAChB,OAAOA,QAAQ,CAAChB,OAAT,CAAiBC,UAAjB,CAA4BC,MAAnC;IACH;EA/BL;IAAA;IAAA,OAgCI,iBAAQ,CACP;EAjCL;;EAAA;AAAA,EAA8BlB,uBAA9B"},"metadata":{},"sourceType":"module"}