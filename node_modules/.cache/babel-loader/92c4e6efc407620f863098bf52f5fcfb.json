{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/my-Portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n    this._engine = engine;\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.pool = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.interactionManager = new InteractionManager(this._engine, container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    p = _step3.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.interactionManager.init();\n\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              pathGenerator = _step5$value[1];\n\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context2.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (index < 0 || index > this.count) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        this.pool.push(particle);\n        deleted++;\n\n        this._engine.dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this._applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                    pathGenerator.update();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                _iterator7 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                    (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 6;\n\n                _iterator8.s();\n\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n\n                _particle = _step8.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                  _particle.initialPosition.x *= resizeFactor.width;\n                  _particle.initialPosition.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _context3.next = 15;\n                return this.interactionManager.reset(_particle);\n\n              case 15:\n                _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n                _context3.prev = 16;\n\n                _iterator10.s();\n\n              case 18:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n\n                if (!_particle.destroyed) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                return _context3.abrupt(\"break\", 25);\n\n              case 22:\n                (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n\n              case 23:\n                _context3.next = 18;\n                break;\n\n              case 25:\n                _context3.next = 30;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t0 = _context3[\"catch\"](16);\n\n                _iterator10.e(_context3.t0);\n\n              case 30:\n                _context3.prev = 30;\n\n                _iterator10.f();\n\n                return _context3.finish(30);\n\n              case 33:\n                _iterator11 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    mover = _step11.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context3.abrupt(\"continue\", 39);\n\n              case 38:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n\n              case 39:\n                _context3.next = 8;\n                break;\n\n              case 41:\n                _context3.next = 46;\n                break;\n\n              case 43:\n                _context3.prev = 43;\n                _context3.t1 = _context3[\"catch\"](6);\n\n                _iterator8.e(_context3.t1);\n\n              case 46:\n                _context3.prev = 46;\n\n                _iterator8.f();\n\n                return _context3.finish(46);\n\n              case 49:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context3.next = 52;\n                return this.interactionManager.externalInteract(delta);\n\n              case 52:\n                _iterator9 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 53;\n\n                _iterator9.s();\n\n              case 55:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _particle2 = _step9.value;\n                _iterator12 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    updater = _step12.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context3.next = 62;\n                  break;\n                }\n\n                _context3.next = 62;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 62:\n                _context3.next = 55;\n                break;\n\n              case 64:\n                _context3.next = 69;\n                break;\n\n              case 66:\n                _context3.prev = 66;\n                _context3.t2 = _context3[\"catch\"](53);\n\n                _iterator9.e(_context3.t2);\n\n              case 69:\n                _context3.prev = 69;\n\n                _iterator9.f();\n\n                return _context3.finish(69);\n\n              case 72:\n                delete container.canvas.resizeFactor;\n\n              case 73:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"_applyDensity\",\n    value: function _applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this._initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"_initDensityFactor\",\n    value: function _initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"_pushParticle\",\n    value: function _pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = this.pool.pop();\n\n        if (particle) {\n          particle.init(this.nextId, position, overrideOptions, group);\n        } else {\n          particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n        }\n\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n\n  return Particles;\n}();","map":{"version":3,"names":["InteractionManager","Particle","Point","QuadTree","Rectangle","calcPositionFromSize","Particles","engine","container","_engine","nextId","array","zArray","pool","limit","needsSort","lastZIndex","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","options","actualOptions","manualParticles","particle","addParticle","position","overrideOptions","group","initializer","particles","number","countToRemove","count","removeQuantity","_pushParticle","delta","clear","update","sort","a","b","z","id","plugin","drawPlugin","p","draw","mode","handleClickMode","_a","handled","init","particlesInitialization","undefined","pathGenerators","pathGenerator","addManualParticles","groups","groupOptions","i","j","value","nb","mouse","pushing","factor","override","removeAt","indexOf","index","quantity","deleted","destroy","splice","zIdx","push","dispatchEvent","data","_applyDensity","particlesToDelete","call","resizeFactor","ignoresResizeRatio","x","y","initialPosition","reset","destroyed","_b","particleUpdate","mover","isEnabled","move","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","manualCount","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","min","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","pop","canAdd","e","console","warn"],"sources":["D:/Projects/my-Portfolio/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}