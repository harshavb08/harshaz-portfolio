{"ast":null,"code":"import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants\";\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nexport class EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n    this.handlers = {\n      mouseMove: e => this.mouseTouchMove(e),\n      touchStart: e => this.mouseTouchMove(e),\n      touchMove: e => this.mouseTouchMove(e),\n      touchEnd: () => this.mouseTouchFinish(),\n      mouseLeave: () => this.mouseTouchFinish(),\n      touchCancel: () => this.mouseTouchFinish(),\n      touchEndClick: e => this.mouseTouchClick(e),\n      mouseUp: e => this.mouseTouchClick(e),\n      mouseDown: () => this.mouseDown(),\n      visibilityChange: () => this.handleVisibilityChange(),\n      themeChange: e => this.handleThemeChange(e),\n      oldThemeChange: e => this.handleThemeChange(e),\n      resize: () => this.handleWindowResize()\n    };\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (this.canPush) {\n      const mouseInteractivity = container.interactivity.mouse,\n            mousePos = mouseInteractivity.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n      mouseInteractivity.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n      executeOnSingleOrMultiple(onClick.mode, mode => this.handleClickMode(mode));\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleClickMode(mode) {\n    this.container.handleClickMode(mode);\n  }\n\n  handleThemeChange(e) {\n    const mediaEvent = e,\n          container = this.container,\n          options = container.options,\n          defaultThemes = options.defaultThemes,\n          themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light,\n          theme = options.themes.find(theme => theme.name === themeName);\n\n    if (theme && theme.default.auto) {\n      container.loadTheme(themeName);\n    }\n  }\n\n  handleVisibilityChange() {\n    const container = this.container,\n          options = container.actualOptions;\n    this.mouseTouchFinish();\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw(true);\n      }\n    }\n  }\n\n  handleWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n      delete this.resizeTimeout;\n    }\n\n    this.resizeTimeout = setTimeout(async () => {\n      var _a;\n\n      return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n  }\n\n  manageListeners(add) {\n    var _a;\n\n    const handlers = this.handlers,\n          container = this.container,\n          options = container.actualOptions,\n          detectType = options.interactivity.detectsOn;\n    let mouseLeaveTmpEvent = mouseLeaveEvent;\n\n    if (detectType === \"window\") {\n      container.interactivity.element = window;\n      mouseLeaveTmpEvent = mouseOutEvent;\n    } else if (detectType === \"parent\" && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n\n    if (mediaMatch) {\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n      } else if (mediaMatch.addListener !== undefined) {\n        if (add) {\n          mediaMatch.addListener(handlers.oldThemeChange);\n        } else {\n          mediaMatch.removeListener(handlers.oldThemeChange);\n        }\n      }\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (!interactivityEl) {\n      return;\n    }\n\n    const html = interactivityEl;\n\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n      manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n      manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n      } else {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n        manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n        manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n      }\n\n      manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n      manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n    }\n\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n\n    if (options.interactivity.events.resize) {\n      if (typeof ResizeObserver !== \"undefined\") {\n        if (this.resizeObserver && !add) {\n          if (container.canvas.element) {\n            this.resizeObserver.unobserve(container.canvas.element);\n          }\n\n          this.resizeObserver.disconnect();\n          delete this.resizeObserver;\n        } else if (!this.resizeObserver && add && container.canvas.element) {\n          this.resizeObserver = new ResizeObserver(entries => {\n            const entry = entries.find(e => e.target === container.canvas.element);\n\n            if (!entry) {\n              return;\n            }\n\n            this.handleWindowResize();\n          });\n          this.resizeObserver.observe(container.canvas.element);\n        }\n      } else {\n        manageListener(window, resizeEvent, handlers.resize, add);\n      }\n    }\n\n    if (document) {\n      manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n    }\n  }\n\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n\n    if (!mousePosition || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (!plugin.clickPositionValid) {\n        continue;\n      }\n\n      handled = plugin.clickPositionValid(mousePosition);\n\n      if (handled) {\n        break;\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n\n    mouse.clicking = false;\n  }\n\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n\n    if (!interactivity) {\n      return;\n    }\n\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n      return;\n    }\n\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"pointer\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === \"parent\") {\n        const source = mouseEvent.target,\n              target = mouseEvent.currentTarget,\n              canvasEl = container.canvas.element;\n\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect(),\n                targetRect = target.getBoundingClientRect(),\n                canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else if (mouseEvent.target === container.canvas.element) {\n        pos = {\n          x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n          y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n        };\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e,\n            lastTouch = touchEvent.touches[touchEvent.touches.length - 1],\n            canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = mouseMoveEvent;\n  }\n\n}","map":{"version":3,"names":["executeOnSingleOrMultiple","safeMatchMedia","mouseDownEvent","mouseLeaveEvent","mouseMoveEvent","mouseOutEvent","mouseUpEvent","resizeEvent","touchCancelEvent","touchEndEvent","touchMoveEvent","touchStartEvent","visibilityChangeEvent","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","EventListeners","constructor","container","canPush","handlers","mouseMove","e","mouseTouchMove","touchStart","touchMove","touchEnd","mouseTouchFinish","mouseLeave","touchCancel","touchEndClick","mouseTouchClick","mouseUp","mouseDown","visibilityChange","handleVisibilityChange","themeChange","handleThemeChange","oldThemeChange","resize","handleWindowResize","addListeners","manageListeners","removeListeners","doMouseTouchClick","actualOptions","mouseInteractivity","interactivity","mouse","mousePos","position","clickPosition","Object","assign","clickTime","Date","getTime","onClick","events","mode","handleClickMode","type","setTimeout","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","pauseOnBlur","document","hidden","pageHidden","pause","getAnimationStatus","play","draw","resizeTimeout","clearTimeout","_a","canvas","windowResize","delay","detectType","detectsOn","mouseLeaveTmpEvent","window","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","enable","style","pointerEvents","ResizeObserver","resizeObserver","unobserve","disconnect","entries","entry","target","observe","clicking","downPosition","inside","handled","mousePosition","plugin","plugins","clickPositionValid","status","_b","_c","_d","_e","_f","_g","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio"],"sources":["D:/Projects/my-Portfolio/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js"],"sourcesContent":["import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}